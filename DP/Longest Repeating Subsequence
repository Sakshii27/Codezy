int LLCS(string s1,string s2,int n,int m){
         //only 1 statement is change for calulate repeating subsequence from LCS
         int dp[n+1][m+1];
         for(int i=0;i<n+1;i++){
             dp[i][0] = 0;
             dp[0][i] = 0;
         }
         
         for(int i =1 ;i<n+1;i++){
             for(int j=1;j<m+1;j++){
                 //i!=j which avoid presence of single char in string 
                 if(s1[i-1] == s2[j-1] && i!=j){
                     dp[i][j] = dp[i-1][j-1] + 1;
                 }
                 else
                 {
                     dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
                 }
             }
         }
         
         return dp[n][m];
     
     }
 
 int LongestRepeatingSubsequence(string str)
 {
     // we make two same string s1 and s2; 
     string s1 = str;
     string s2 = str;
     int n = str.length();
     // function LLCS return the value of longestrepeartingsubsequence 
     
     return LLCS(s1,s2,n,n);
 }
