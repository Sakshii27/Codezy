class Solution{
    public:
    //Function to check whether a binary tree is balanced or not.
    pair<bool,int> isbalfast(Node* root){
        // Base case
        if(root == NULL){
            pair<bool,int> p = make_pair(true,0);
            return p;
        }
        
        pair<bool,int> left = isbalfast(root->left);
        pair<bool,int> right = isbalfast(root->right);
        
        int leftans = left.first;
        int rightans = right.first;
        int diff = abs(left.second - right.second) <= 1;
        
        pair<bool,int> ans;
        ans.second = max(left.second,right.second) +1; // Gives Height of B.T
        
        if((leftans && rightans && diff) == true){
            ans.first = true;
        }
        else{
            ans.second = false;
        }
        
        return ans;
    }
    bool isBalanced(Node *root)
    {
        //  Your Code here
        return isbalfast(root).first;
    }
};
