class Solution {
public:

    int postindex;
    
    TreeNode* solve(vector<int>& inorder, vector<int>& postorder, int is , int end, map<int, int>& mp) {

        // base case
        if(is>end) return NULL;

        TreeNode* root = new TreeNode(postorder[postindex]);
        int position = mp[postorder[postindex]];
        postindex--;

        root->right = solve(inorder,postorder,position+1,end,mp);
        root->left = solve(inorder,postorder,is,position-1,mp);
        

        return root;
    }

    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {

        postindex = inorder.size()-1;
        map<int,int> mp;
        for(int i = 0; i<inorder.size(); i++){
            mp[inorder[i]] =i;
        }      

        return solve(inorder,postorder,0,inorder.size()-1,mp);
        
    }
};
