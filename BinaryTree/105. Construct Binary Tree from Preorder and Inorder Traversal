class Solution {
public:

    int preindex =0;

    TreeNode* solve(vector<int> &preorder, vector<int> &inorder, int instart, int inend){
        if(instart > inend) return NULL;
        TreeNode* node = new TreeNode(preorder[preindex]);
        preindex++;

        int posIndex;
        for(int i=instart; i<=inend; i++){
            if(inorder[i] == node->val){
                posIndex = i;
                break;
            }
        }

        node->left = solve(preorder,inorder,instart,posIndex-1);
        node->right = solve(preorder,inorder,posIndex+1,inend);

        return node;

    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {        
        return solve(preorder,inorder,0,inorder.size()-1);
        
    }
};
