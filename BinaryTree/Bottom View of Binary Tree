class Solution {
  public:
    vector <int> bottomView(Node *root) {
        vector<int> ans;
        if(root == NULL) return ans;
        
        map<int,int> mp; // Vertical,root->data
        queue<pair<Node*,int>> q; 
        q.push({root,0});
        
        while(!q.empty()){
            auto curr = q.front();
            q.pop();
            
            Node* frontNode = curr.first;
            int vertical = curr.second;
            
            mp[vertical] = frontNode->data;
            
            
            // Check if left or right exist or not 
            if(frontNode->left){
                q.push({frontNode->left,vertical-1});
            }
            if(frontNode->right){
                q.push({frontNode->right,vertical+ 1});
            }
        }
        for(auto i: mp){
            ans.push_back(i.second);
        }
        return ans;
    }
};
